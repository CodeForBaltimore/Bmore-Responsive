{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Bmore Responsive",
    "description" : "An emergency response and contact management API.",
    "contact" : {
      "email" : "hello@codeforbaltimore.org"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/codeforbaltimore/bmoreResponsive/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "developer",
    "description" : "Operations available to regular developers"
  }, {
    "name" : "user",
    "description" : "Operations related to system users"
  }, {
    "name" : "userRoles",
    "description" : "Operations related to user roles"
  } ],
  "paths" : {
    "/health" : {
      "get" : {
        "tags" : [ "developer" ],
        "summary" : "returns a healthcheck",
        "description" : "This returns simple system information\n",
        "responses" : {
          "200" : {
            "description" : "the system healthcheck",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthcheckItem"
                }
              }
            }
          },
          "500" : {
            "description" : "System error"
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "logs in a system user",
        "description" : "The system login endpoint.",
        "requestBody" : {
          "description" : "The body of the payload",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginUserItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "login token"
          },
          "400" : {
            "description" : "Invalid credentials"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "returns all system users",
        "description" : "By passing in the appropriate options, you can search for\navailable users in the system\n",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SystemUserItem"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "updates a single system user",
        "description" : "By sending a valid payload you can update a user.",
        "parameters" : [ {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M"
          }
        } ],
        "requestBody" : {
          "description" : "The body of the payload.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewUserItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "user updated"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "user" ],
        "summary" : "creates a single system user",
        "description" : "By sending a valid payload you can create a new user.",
        "requestBody" : {
          "description" : "The body of the payload.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewUserItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "user created"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/user/{email}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "returns a single system user",
        "description" : "By passing the username, you can lookup a user.",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "email of the user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "email"
          }
        }, {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the user object",
            "content" : {
              "session/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemUserItem"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "deletes a single system user",
        "description" : "By sending a valid payload you can delete a user.",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "the email of the user to delete.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "email"
          }
        }, {
          "name" : "token",
          "in" : "header",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1ODA3NTM0MDUsImV4cCI6MTU4MDgzOTgwNX0.Q6W7Vo6By35yjZBeLKkk96s8LyqIE2G39AG1H3LRD9M"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "user deleted"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "HealthcheckItem" : {
        "required" : [ "environment", "requestId", "uptime", "version" ],
        "type" : "object",
        "properties" : {
          "uptime" : {
            "type" : "string",
            "example" : "42:42:42"
          },
          "environment" : {
            "type" : "string",
            "example" : "dev"
          },
          "version" : {
            "type" : "string",
            "example" : "0.0.1"
          },
          "requestId" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "602e1bd9-3eb1-4a26-a0d1-6bf08e8c0a66"
          }
        }
      },
      "LoginUserItem" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "test@test.test"
          },
          "password" : {
            "type" : "string",
            "example" : "test"
          }
        }
      },
      "NewUserItem" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "test@test.test"
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "example" : "test"
          }
        }
      },
      "SystemUserItem" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "test@test.test"
          },
          "displayNamme" : {
            "type" : "string",
            "example" : "test"
          },
          "phone" : {
            "type" : "string",
            "example" : "123456789"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-01-21T13:45:52.348Z"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-01-21T13:45:52.348Z"
          }
        }
      },
      "UserRoleItem" : {
        "required" : [ "id", "role" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 42
          },
          "role" : {
            "type" : "string",
            "example" : "test"
          },
          "description" : {
            "type" : "string",
            "example" : "This is a test"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-01-21T13:45:52.348Z"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2020-01-21T13:45:52.348Z"
          }
        }
      }
    }
  }
}